<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  
  

  


  <head>
    <title>
      tiedosto Elokuvat.java hakemistossa k2018/kijohiet/tags/vaihe7/src/elokuvarekisteri
     – Ohjelmointi 2 HT
    </title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <!--[if IE]><script type="text/javascript">
      if (/^#__msie303:/.test(window.location.hash))
        window.location.replace(window.location.hash.replace(/^#__msie303:/, '#'));
    </script><![endif]-->
        <link rel="search" href="/projects/ohj2ht/search" />
        <link rel="help" href="/projects/ohj2ht/wiki/TracGuide" />
        <link rel="alternate" href="/projects/ohj2ht/browser/k2018/kijohiet/tags/vaihe7/src/elokuvarekisteri/Elokuvat.java?rev=50131&amp;format=txt" type="text/plain" title="Pelkkä teksti" /><link rel="alternate" href="/projects/ohj2ht/export/50131/k2018/kijohiet/tags/vaihe7/src/elokuvarekisteri/Elokuvat.java" type="text/x-java; charset=iso-8859-15" title="Alkuperäinen muoto" />
        <link rel="up" href="/projects/ohj2ht/browser/k2018/kijohiet/trunk/src/elokuvarekisteri/Elokuvat.java" />
        <link rel="start" href="/projects/ohj2ht/wiki" />
        <link rel="stylesheet" href="/projects/ohj2ht/chrome/common/css/trac.css" type="text/css" /><link rel="stylesheet" href="/projects/ohj2ht/chrome/common/css/code.css" type="text/css" /><link rel="stylesheet" href="/projects/ohj2ht/pygments/trac.css" type="text/css" /><link rel="stylesheet" href="/projects/ohj2ht/chrome/common/css/browser.css" type="text/css" />
        <link rel="prev" href="/projects/ohj2ht/browser/k2018/kijohiet/trunk/src/elokuvarekisteri/Elokuvat.java?rev=50050" title="Versio 50050" />
        <link rel="shortcut icon" href="/projects/ohj2ht/chrome/common/trac.ico" type="image/x-icon" />
        <link rel="icon" href="/projects/ohj2ht/chrome/common/trac.ico" type="image/x-icon" />
      <link type="application/opensearchdescription+xml" rel="search" href="/projects/ohj2ht/search/opensearch" title="Etsi projektista Ohjelmointi 2 HT" />
    <script type="text/javascript" src="/projects/ohj2ht/chrome/common/js/jquery.js"></script><script type="text/javascript" src="/projects/ohj2ht/chrome/common/js/babel.js"></script><script type="text/javascript" src="/projects/ohj2ht/chrome/common/js/messages/fi.js"></script><script type="text/javascript" src="/projects/ohj2ht/chrome/common/js/trac.js"></script><script type="text/javascript" src="/projects/ohj2ht/chrome/common/js/search.js"></script>
    <!--[if lt IE 7]>
    <script type="text/javascript" src="/projects/ohj2ht/chrome/common/js/ie_pre7_hacks.js"></script>
    <![endif]-->
    <script type="text/javascript" src="/projects/ohj2ht/chrome/common/js/folding.js"></script>
    <script type="text/javascript">
      jQuery(document).ready(function($) {
        $(".trac-toggledeleted").show().click(function() {
                  $(this).siblings().find(".trac-deleted").toggle();
                  return false;
        }).click();
        $("#jumploc input").hide();
        $("#jumploc select").change(function () {
          this.parentNode.parentNode.submit();
        });
          $('#preview table.code').enableCollapsibleColumns($('#preview table.code thead th.content'));
      });
    </script>
    <link rel="stylesheet" type="text/css" href="https://trac.cc.jyu.fi/projects/ohj1/export/0/css/style.css" />
<!--          href="https://svn.cc.jyu.fi/srv/svn/ohj2/css/style.css" /> -->
<!--          href="${href.chrome('site/style.css')}" /> -->
  </head>
  <body>
    <div id="siteheader" class="ylalinkkipalkki">
<p>Ohjelmointi 2 - kevät 2019
<a class="ylalinkki" href="https://tim.jyu.fi/view/kurssit/tie/ohj2/2019k/koti">Koti 2019</a>
<a class="ylalinkki" href="https://tim.jyu.fi/view/kurssit/tie/ohj2/2019k/luentojen-aiheet">Luennot</a>
<a class="ylalinkki" href="https://tim.jyu.fi/view/kurssit/tie/ohj2/2019k/paate/paate">Ohjaukset</a>
<a class="ylalinkki" href="https://tim.jyu.fi/view/kurssit/tie/ohj2/harjoitustyo/ohje">Harjoitustyö</a>
<a class="ylalinkki" href="https://tim.jyu.fi/view/kurssit/tie/ohj2/tyokaluja">Työkalut</a>
<a class="ylalinkki" href="https://tim.jyu.fi/view/2">Moniste</a>
<a class="ylalinkki" href="https://tim.jyu.fi/view/kurssit/tie/ohj2/2019k/demotyleinen">Demot</a>
</p>
</div>
    <div id="banner">
      <div id="header">
        <a id="logo" href="/projects/ohj2ht/wiki/TracIni#header_logo-section"><img src="/projects/ohj2ht/chrome/common/trac_banner.png" alt="" /></a>
      </div>
      <form id="search" action="/projects/ohj2ht/search" method="get">
        <div>
          <label for="proj-search">Haku:</label>
          <input type="text" id="proj-search" name="q" size="18" value="" />
          <input type="submit" value="Haku" />
        </div>
      </form>
      <div id="metanav" class="nav">
    <ul>
      <li class="first"><a href="/projects/ohj2ht/login">Kirjaudu sisään</a></li><li><a href="/projects/ohj2ht/prefs">Asetukset</a></li><li><a href="/projects/ohj2ht/wiki/TracGuide">Ohjeet</a></li><li class="last"><a href="/projects/ohj2ht/about">Tietoja Tracista</a></li>
    </ul>
  </div>
    </div>
    <div id="mainnav" class="nav">
    <ul>
      <li class="first"><a href="/projects/ohj2ht/wiki">Wiki</a></li><li class="active"><a href="/projects/ohj2ht/browser">Selaa koodia</a></li><li class="last"><a href="/projects/ohj2ht/search">Haku</a></li>
    </ul>
  </div>
    <div id="main">
      <div id="ctxtnav" class="nav">
        <h2>Kontekstin navigointi</h2>
          <ul>
              <li class="first"><span>&larr; <a class="prev" href="/projects/ohj2ht/browser/k2018/kijohiet/trunk/src/elokuvarekisteri/Elokuvat.java?rev=50050" title="Versio 50050">Edellinen versio</a></span></li><li><a href="/projects/ohj2ht/browser/k2018/kijohiet/trunk/src/elokuvarekisteri/Elokuvat.java">Uusin versio</a></li><li><span class="missing">Seuraava versio &rarr;</span></li><li><a href="/projects/ohj2ht/browser/k2018/kijohiet/trunk/src/elokuvarekisteri/Elokuvat.java?annotate=blame&amp;rev=50131" title="Merkitse jokaisen rivin lähdeversio (viimeisin versio jossa kyseistä riviä on muutettu). Tämä saattaa kestää pitkään...">Blame</a></li><li class="last"><a href="/projects/ohj2ht/log/k2018/kijohiet/tags/vaihe7/src/elokuvarekisteri/Elokuvat.java?rev=50131">Versioloki</a></li>
          </ul>
        <hr />
      </div>
    <div id="content" class="browser">
          <h1>
<a class="pathentry first" href="/projects/ohj2ht/browser?order=name" title="Siirry tiedostovaraston alkuun">source:</a>
<a class="pathentry" href="/projects/ohj2ht/browser/k2018?rev=50131&amp;order=name" title="Näytä k2018">k2018</a><span class="pathentry sep">/</span><a class="pathentry" href="/projects/ohj2ht/browser/k2018/kijohiet?rev=50131&amp;order=name" title="Näytä kijohiet">kijohiet</a><span class="pathentry sep">/</span><a class="pathentry" href="/projects/ohj2ht/browser/k2018/kijohiet/tags?rev=50131&amp;order=name" title="Näytä tags">tags</a><span class="pathentry sep">/</span><a class="pathentry" href="/projects/ohj2ht/browser/k2018/kijohiet/tags/vaihe7?rev=50131&amp;order=name" title="Näytä vaihe7">vaihe7</a><span class="pathentry sep">/</span><a class="pathentry" href="/projects/ohj2ht/browser/k2018/kijohiet/tags/vaihe7/src?rev=50131&amp;order=name" title="Näytä src">src</a><span class="pathentry sep">/</span><a class="pathentry" href="/projects/ohj2ht/browser/k2018/kijohiet/tags/vaihe7/src/elokuvarekisteri?rev=50131&amp;order=name" title="Näytä elokuvarekisteri">elokuvarekisteri</a><span class="pathentry sep">/</span><a class="pathentry" href="/projects/ohj2ht/browser/k2018/kijohiet/tags/vaihe7/src/elokuvarekisteri/Elokuvat.java?rev=50131&amp;order=name" title="Näytä Elokuvat.java">Elokuvat.java</a>
<span class="pathentry sep">@</span>
  <a class="pathentry" href="/projects/ohj2ht/changeset/50131" title="Näytä muutos 50131">50131</a>
<br style="clear: both" />
</h1>
        <div id="jumprev">
          <form action="" method="get">
            <div>
              <label for="rev" title="Vinkki: jätä kenttä tyhjäksi nähdäksesi uusin versio">
                Näytä versio</label>
              <input type="text" id="rev" name="rev" value="50131" size="6" />
            </div>
          </form>
        </div>
      <table id="info" summary="Version tiedot">
        <tr>
          <th scope="col">Version <a href="/projects/ohj2ht/changeset/50129">50129</a>,
            <span title="16026 tavua">15.7 KB</span>
            tallensi kijohiet, <a class="timeline" href="/projects/ohj2ht/timeline?from=2018-04-17T19%3A20%3A10%2B03%3A00&amp;precision=second" title="2018-04-17T19:20:10+03:00 aikajanalla">11 kuukautta</a> sitten
            (<a href="/projects/ohj2ht/changeset/50129/k2018/kijohiet/trunk/src/elokuvarekisteri/Elokuvat.java">muutokset</a>)</th>
        </tr>
        <tr>
          <td class="message searchable">
              <p>
Testit toimivat<br />
</p>
          </td>
        </tr>
      </table>
      <div id="preview" class="searchable">
        
  <table class="code"><thead><tr><th class="lineno" title="Rivinumerot">Rivi</th><th class="content"> </th></tr></thead><tbody><tr><th id="L1"><a href="#L1">1</a></th><td><span class="kn">package</span> elokuvarekisteri<span class="o">;</span></td></tr><tr><th id="L2"><a href="#L2">2</a></th><td></td></tr><tr><th id="L3"><a href="#L3">3</a></th><td><span class="kn">import</span> <span class="nn">java.io.BufferedReader</span><span class="o">;</span> </td></tr><tr><th id="L4"><a href="#L4">4</a></th><td><span class="kn">import</span> <span class="nn">java.io.File</span><span class="o">;</span> </td></tr><tr><th id="L5"><a href="#L5">5</a></th><td><span class="kn">import</span> <span class="nn">java.io.FileNotFoundException</span><span class="o">;</span> </td></tr><tr><th id="L6"><a href="#L6">6</a></th><td><span class="kn">import</span> <span class="nn">java.io.FileReader</span><span class="o">;</span> </td></tr><tr><th id="L7"><a href="#L7">7</a></th><td><span class="kn">import</span> <span class="nn">java.io.FileWriter</span><span class="o">;</span> </td></tr><tr><th id="L8"><a href="#L8">8</a></th><td><span class="kn">import</span> <span class="nn">java.io.IOException</span><span class="o">;</span> </td></tr><tr><th id="L9"><a href="#L9">9</a></th><td><span class="kn">import</span> <span class="nn">java.io.PrintWriter</span><span class="o">;</span> </td></tr><tr><th id="L10"><a href="#L10">10</a></th><td><span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span></td></tr><tr><th id="L11"><a href="#L11">11</a></th><td><span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span></td></tr><tr><th id="L12"><a href="#L12">12</a></th><td><span class="kn">import</span> <span class="nn">java.util.Collection</span><span class="o">;</span></td></tr><tr><th id="L13"><a href="#L13">13</a></th><td><span class="kn">import</span> <span class="nn">java.util.Iterator</span><span class="o">;</span> </td></tr><tr><th id="L14"><a href="#L14">14</a></th><td><span class="kn">import</span> <span class="nn">java.util.NoSuchElementException</span><span class="o">;</span></td></tr><tr><th id="L15"><a href="#L15">15</a></th><td></td></tr><tr><th id="L16"><a href="#L16">16</a></th><td><span class="kn">import</span> <span class="nn">fi.jyu.mit.ohj2.WildChars</span><span class="o">;</span></td></tr><tr><th id="L17"><a href="#L17">17</a></th><td></td></tr><tr><th id="L18"><a href="#L18">18</a></th><td></td></tr><tr><th id="L19"><a href="#L19">19</a></th><td><span class="cm">/**</span></td></tr><tr><th id="L20"><a href="#L20">20</a></th><td><span class="cm"> * @author kimhi</span></td></tr><tr><th id="L21"><a href="#L21">21</a></th><td><span class="cm"> * @version 8.3.2018</span></td></tr><tr><th id="L22"><a href="#L22">22</a></th><td><span class="cm"> * Elokuvarekisterin Elokuvat-luokka, joka osaa luoda uuden elokuvan</span></td></tr><tr><th id="L23"><a href="#L23">23</a></th><td><span class="cm"> */</span></td></tr><tr><th id="L24"><a href="#L24">24</a></th><td><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Elokuvat</span> <span class="kd">implements</span> Iterable<span class="o">&lt;</span>Elokuva<span class="o">&gt;</span> <span class="o">{</span></td></tr><tr><th id="L25"><a href="#L25">25</a></th><td></td></tr><tr><th id="L26"><a href="#L26">26</a></th><td>    </td></tr><tr><th id="L27"><a href="#L27">27</a></th><td>    <span class="kd">private</span> <span class="kd">static</span> <span class="kt">int</span> MAX_ELOKUVAT   <span class="o">=</span> <span class="mi">5</span><span class="o">;</span></td></tr><tr><th id="L28"><a href="#L28">28</a></th><td>    <span class="kd">private</span> <span class="kt">int</span> lkm <span class="o">=</span> <span class="mi">0</span><span class="o">;</span></td></tr><tr><th id="L29"><a href="#L29">29</a></th><td>    <span class="kd">private</span> String kokoNimi <span class="o">=</span> <span class="s">""</span><span class="o">;</span> </td></tr><tr><th id="L30"><a href="#L30">30</a></th><td>    <span class="kd">private</span> String tiedostonPerusNimi <span class="o">=</span> <span class="s">"nimet"</span><span class="o">;</span></td></tr><tr><th id="L31"><a href="#L31">31</a></th><td>    </td></tr><tr><th id="L32"><a href="#L32">32</a></th><td>    <span class="cm">/**</span></td></tr><tr><th id="L33"><a href="#L33">33</a></th><td><span class="cm">     * Taulukko elokuvista</span></td></tr><tr><th id="L34"><a href="#L34">34</a></th><td><span class="cm">     */</span></td></tr><tr><th id="L35"><a href="#L35">35</a></th><td>    <span class="kd">public</span> <span class="kd">static</span> Elokuva alkiot<span class="o">[]</span> <span class="o">=</span> <span class="k">new</span> Elokuva<span class="o">[</span>MAX_ELOKUVAT<span class="o">];</span></td></tr><tr><th id="L36"><a href="#L36">36</a></th><td>    </td></tr><tr><th id="L37"><a href="#L37">37</a></th><td>    <span class="kd">private</span> <span class="kt">boolean</span> muutettu <span class="o">=</span> <span class="kc">false</span><span class="o">;</span></td></tr><tr><th id="L38"><a href="#L38">38</a></th><td>    </td></tr><tr><th id="L39"><a href="#L39">39</a></th><td>    </td></tr><tr><th id="L40"><a href="#L40">40</a></th><td>    <span class="cm">/** </span></td></tr><tr><th id="L41"><a href="#L41">41</a></th><td><span class="cm">     * Luokka elokuvien iteroimiseksi. </span></td></tr><tr><th id="L42"><a href="#L42">42</a></th><td><span class="cm">     * @example </span></td></tr><tr><th id="L43"><a href="#L43">43</a></th><td><span class="cm">     * &lt;pre name="test"&gt; </span></td></tr><tr><th id="L44"><a href="#L44">44</a></th><td><span class="cm">     * #THROWS SailoException  </span></td></tr><tr><th id="L45"><a href="#L45">45</a></th><td><span class="cm">     * #PACKAGEIMPORT </span></td></tr><tr><th id="L46"><a href="#L46">46</a></th><td><span class="cm">     * #import java.util.*; </span></td></tr><tr><th id="L47"><a href="#L47">47</a></th><td><span class="cm">     *  </span></td></tr><tr><th id="L48"><a href="#L48">48</a></th><td><span class="cm">     * Elokuvat elokuvat = new Elokuvat(); </span></td></tr><tr><th id="L49"><a href="#L49">49</a></th><td><span class="cm">     * Elokuva kummiseta1 = new Elokuva(), kummiseta2 = new Elokuva(); </span></td></tr><tr><th id="L50"><a href="#L50">50</a></th><td><span class="cm">     * kummiseta1.rekisteroi(); kummiseta2.rekisteroi(); </span></td></tr><tr><th id="L51"><a href="#L51">51</a></th><td><span class="cm">     * </span></td></tr><tr><th id="L52"><a href="#L52">52</a></th><td><span class="cm">     * elokuvat.lisaa(kummiseta1);  </span></td></tr><tr><th id="L53"><a href="#L53">53</a></th><td><span class="cm">     * elokuvat.lisaa(kummiseta2);  </span></td></tr><tr><th id="L54"><a href="#L54">54</a></th><td><span class="cm">     * elokuvat.lisaa(kummiseta1);  </span></td></tr><tr><th id="L55"><a href="#L55">55</a></th><td><span class="cm">     *  </span></td></tr><tr><th id="L56"><a href="#L56">56</a></th><td><span class="cm">     * StringBuffer ids = new StringBuffer(30); </span></td></tr><tr><th id="L57"><a href="#L57">57</a></th><td><span class="cm">     * for (Elokuva elokuva:elokuvat)   // Kokeillaan for-silmukan toimintaa </span></td></tr><tr><th id="L58"><a href="#L58">58</a></th><td><span class="cm">     *   ids.append(" "+elokuva.getTunnusNro());            </span></td></tr><tr><th id="L59"><a href="#L59">59</a></th><td><span class="cm">     *  </span></td></tr><tr><th id="L60"><a href="#L60">60</a></th><td><span class="cm">     * String tulos = " " + kummiseta1.getTunnusNro() + " " + kummiseta2.getTunnusNro() + " " + kummiseta1.getTunnusNro(); </span></td></tr><tr><th id="L61"><a href="#L61">61</a></th><td><span class="cm">     *  </span></td></tr><tr><th id="L62"><a href="#L62">62</a></th><td><span class="cm">     * ids.toString() === tulos;  </span></td></tr><tr><th id="L63"><a href="#L63">63</a></th><td><span class="cm">     *  </span></td></tr><tr><th id="L64"><a href="#L64">64</a></th><td><span class="cm">     * ids = new StringBuffer(30); </span></td></tr><tr><th id="L65"><a href="#L65">65</a></th><td><span class="cm">     * for (Iterator&lt;Elokuva&gt;  i=elokuvat.iterator(); i.hasNext(); ) { // ja iteraattorin toimintaa </span></td></tr><tr><th id="L66"><a href="#L66">66</a></th><td><span class="cm">     *   Elokuva elokuva = i.next(); </span></td></tr><tr><th id="L67"><a href="#L67">67</a></th><td><span class="cm">     *   ids.append(" "+elokuva.getTunnusNro());            </span></td></tr><tr><th id="L68"><a href="#L68">68</a></th><td><span class="cm">     * } </span></td></tr><tr><th id="L69"><a href="#L69">69</a></th><td><span class="cm">     *  </span></td></tr><tr><th id="L70"><a href="#L70">70</a></th><td><span class="cm">     * ids.toString() === tulos; </span></td></tr><tr><th id="L71"><a href="#L71">71</a></th><td><span class="cm">     *  </span></td></tr><tr><th id="L72"><a href="#L72">72</a></th><td><span class="cm">     * Iterator&lt;Elokuva&gt;  i=elokuvat.iterator(); </span></td></tr><tr><th id="L73"><a href="#L73">73</a></th><td><span class="cm">     * i.next() == kummiseta1  === true; </span></td></tr><tr><th id="L74"><a href="#L74">74</a></th><td><span class="cm">     * i.next() == kummiseta2  === true; </span></td></tr><tr><th id="L75"><a href="#L75">75</a></th><td><span class="cm">     * i.next() == kummiseta1  === true; </span></td></tr><tr><th id="L76"><a href="#L76">76</a></th><td><span class="cm">     *  </span></td></tr><tr><th id="L77"><a href="#L77">77</a></th><td><span class="cm">     * i.next();  #THROWS NoSuchElementException </span></td></tr><tr><th id="L78"><a href="#L78">78</a></th><td><span class="cm">     *   </span></td></tr><tr><th id="L79"><a href="#L79">79</a></th><td><span class="cm">     * &lt;/pre&gt; </span></td></tr><tr><th id="L80"><a href="#L80">80</a></th><td><span class="cm">     */</span> </td></tr><tr><th id="L81"><a href="#L81">81</a></th><td>    <span class="kd">public</span> <span class="kd">class</span> <span class="nc">ElokuvatIterator</span> <span class="kd">implements</span> Iterator<span class="o">&lt;</span>Elokuva<span class="o">&gt;</span> <span class="o">{</span> </td></tr><tr><th id="L82"><a href="#L82">82</a></th><td>        <span class="kd">private</span> <span class="kt">int</span> kohdalla <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> </td></tr><tr><th id="L83"><a href="#L83">83</a></th><td> </td></tr><tr><th id="L84"><a href="#L84">84</a></th><td> </td></tr><tr><th id="L85"><a href="#L85">85</a></th><td>        <span class="cm">/** </span></td></tr><tr><th id="L86"><a href="#L86">86</a></th><td><span class="cm">         * Onko olemassa vielä seuraavaa elokuvaa </span></td></tr><tr><th id="L87"><a href="#L87">87</a></th><td><span class="cm">         * @see java.util.Iterator#hasNext() </span></td></tr><tr><th id="L88"><a href="#L88">88</a></th><td><span class="cm">         * @return true jos on vielä elokuvia </span></td></tr><tr><th id="L89"><a href="#L89">89</a></th><td><span class="cm">         */</span> </td></tr><tr><th id="L90"><a href="#L90">90</a></th><td>        <span class="nd">@Override</span> </td></tr><tr><th id="L91"><a href="#L91">91</a></th><td>        <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">hasNext</span><span class="o">()</span> <span class="o">{</span> </td></tr><tr><th id="L92"><a href="#L92">92</a></th><td>            <span class="k">return</span> kohdalla <span class="o">&lt;</span> getLkm<span class="o">();</span> </td></tr><tr><th id="L93"><a href="#L93">93</a></th><td>        <span class="o">}</span> </td></tr><tr><th id="L94"><a href="#L94">94</a></th><td> </td></tr><tr><th id="L95"><a href="#L95">95</a></th><td> </td></tr><tr><th id="L96"><a href="#L96">96</a></th><td>        <span class="cm">/** </span></td></tr><tr><th id="L97"><a href="#L97">97</a></th><td><span class="cm">         * Annetaan seuraava elokuva</span></td></tr><tr><th id="L98"><a href="#L98">98</a></th><td><span class="cm">         * @return seuraava elokuva </span></td></tr><tr><th id="L99"><a href="#L99">99</a></th><td><span class="cm">         * @throws NoSuchElementException jos seuraava alkiota ei enää ole </span></td></tr><tr><th id="L100"><a href="#L100">100</a></th><td><span class="cm">         * @see java.util.Iterator#next() </span></td></tr><tr><th id="L101"><a href="#L101">101</a></th><td><span class="cm">         */</span> </td></tr><tr><th id="L102"><a href="#L102">102</a></th><td>        <span class="nd">@Override</span> </td></tr><tr><th id="L103"><a href="#L103">103</a></th><td>        <span class="kd">public</span> Elokuva <span class="nf">next</span><span class="o">()</span> <span class="kd">throws</span> NoSuchElementException <span class="o">{</span> </td></tr><tr><th id="L104"><a href="#L104">104</a></th><td>            <span class="k">if</span> <span class="o">(</span> <span class="o">!</span>hasNext<span class="o">()</span> <span class="o">)</span> <span class="o">{</span></td></tr><tr><th id="L105"><a href="#L105">105</a></th><td>                <span class="k">throw</span> <span class="k">new</span> <span class="nf">NoSuchElementException</span><span class="o">(</span><span class="s">"Ei oo"</span><span class="o">);</span> </td></tr><tr><th id="L106"><a href="#L106">106</a></th><td>            <span class="o">}</span></td></tr><tr><th id="L107"><a href="#L107">107</a></th><td>            <span class="k">return</span> <span class="nf">anna</span><span class="o">(</span>kohdalla<span class="o">++);</span> </td></tr><tr><th id="L108"><a href="#L108">108</a></th><td>        <span class="o">}</span> </td></tr><tr><th id="L109"><a href="#L109">109</a></th><td> </td></tr><tr><th id="L110"><a href="#L110">110</a></th><td> </td></tr><tr><th id="L111"><a href="#L111">111</a></th><td>        <span class="cm">/** </span></td></tr><tr><th id="L112"><a href="#L112">112</a></th><td><span class="cm">         * Tuhoamista ei ole toteutettu </span></td></tr><tr><th id="L113"><a href="#L113">113</a></th><td><span class="cm">         * @throws UnsupportedOperationException aina </span></td></tr><tr><th id="L114"><a href="#L114">114</a></th><td><span class="cm">         * @see java.util.Iterator#remove() </span></td></tr><tr><th id="L115"><a href="#L115">115</a></th><td><span class="cm">         */</span> </td></tr><tr><th id="L116"><a href="#L116">116</a></th><td>        <span class="nd">@Override</span> </td></tr><tr><th id="L117"><a href="#L117">117</a></th><td>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">remove</span><span class="o">()</span> <span class="kd">throws</span> UnsupportedOperationException <span class="o">{</span> </td></tr><tr><th id="L118"><a href="#L118">118</a></th><td>            <span class="k">throw</span> <span class="k">new</span> <span class="nf">UnsupportedOperationException</span><span class="o">(</span><span class="s">"Me ei poisteta"</span><span class="o">);</span> </td></tr><tr><th id="L119"><a href="#L119">119</a></th><td>        <span class="o">}</span> </td></tr><tr><th id="L120"><a href="#L120">120</a></th><td>    <span class="o">}</span></td></tr><tr><th id="L121"><a href="#L121">121</a></th><td>    </td></tr><tr><th id="L122"><a href="#L122">122</a></th><td>    </td></tr><tr><th id="L123"><a href="#L123">123</a></th><td>    <span class="cm">/**</span></td></tr><tr><th id="L124"><a href="#L124">124</a></th><td><span class="cm">     * Oletusmuodostaja</span></td></tr><tr><th id="L125"><a href="#L125">125</a></th><td><span class="cm">     */</span></td></tr><tr><th id="L126"><a href="#L126">126</a></th><td>    <span class="kd">public</span> <span class="nf">Elokuvat</span><span class="o">()</span> <span class="o">{</span></td></tr><tr><th id="L127"><a href="#L127">127</a></th><td>        <span class="c1">// Attribuuttien oma alustus riittää</span></td></tr><tr><th id="L128"><a href="#L128">128</a></th><td><span class="c1"></span>    <span class="o">}</span></td></tr><tr><th id="L129"><a href="#L129">129</a></th><td>    </td></tr><tr><th id="L130"><a href="#L130">130</a></th><td>    </td></tr><tr><th id="L131"><a href="#L131">131</a></th><td>    <span class="cm">/**</span></td></tr><tr><th id="L132"><a href="#L132">132</a></th><td><span class="cm">     * Palauttaa viitteen i:teen elokuvaan.</span></td></tr><tr><th id="L133"><a href="#L133">133</a></th><td><span class="cm">     * @param i monennenko elokuvan viite halutaan</span></td></tr><tr><th id="L134"><a href="#L134">134</a></th><td><span class="cm">     * @return viite elokuvaan, jonka indeksi on i</span></td></tr><tr><th id="L135"><a href="#L135">135</a></th><td><span class="cm">     * @throws IndexOutOfBoundsException jos i ei ole sallitulla alueella  </span></td></tr><tr><th id="L136"><a href="#L136">136</a></th><td><span class="cm">     */</span></td></tr><tr><th id="L137"><a href="#L137">137</a></th><td>    <span class="kd">public</span> Elokuva <span class="nf">anna</span><span class="o">(</span><span class="kt">int</span> i<span class="o">)</span> <span class="kd">throws</span> IndexOutOfBoundsException <span class="o">{</span></td></tr><tr><th id="L138"><a href="#L138">138</a></th><td>        <span class="k">if</span> <span class="o">(</span>i <span class="o">&lt;</span> <span class="mi">0</span> <span class="o">||</span> lkm <span class="o">&lt;=</span> i<span class="o">)</span> <span class="o">{</span></td></tr><tr><th id="L139"><a href="#L139">139</a></th><td>            <span class="k">throw</span> <span class="k">new</span> <span class="nf">IndexOutOfBoundsException</span><span class="o">(</span><span class="s">"Laiton indeksi: "</span> <span class="o">+</span> i<span class="o">);</span></td></tr><tr><th id="L140"><a href="#L140">140</a></th><td>        <span class="o">}</span></td></tr><tr><th id="L141"><a href="#L141">141</a></th><td>        <span class="k">return</span> alkiot<span class="o">[</span>i<span class="o">];</span></td></tr><tr><th id="L142"><a href="#L142">142</a></th><td>    <span class="o">}</span></td></tr><tr><th id="L143"><a href="#L143">143</a></th><td>    </td></tr><tr><th id="L144"><a href="#L144">144</a></th><td>    </td></tr><tr><th id="L145"><a href="#L145">145</a></th><td>    <span class="cm">/**  </span></td></tr><tr><th id="L146"><a href="#L146">146</a></th><td><span class="cm">     * Palauttaa "taulukossa" hakuehtoon vastaavien elokuvien viitteet  </span></td></tr><tr><th id="L147"><a href="#L147">147</a></th><td><span class="cm">     * @param hakuehto hakuehto  </span></td></tr><tr><th id="L148"><a href="#L148">148</a></th><td><span class="cm">     * @param k etsittävän kentän indeksi   </span></td></tr><tr><th id="L149"><a href="#L149">149</a></th><td><span class="cm">     * @return tietorakenteen löytyneistä elokuvista  </span></td></tr><tr><th id="L150"><a href="#L150">150</a></th><td><span class="cm">     * @example  </span></td></tr><tr><th id="L151"><a href="#L151">151</a></th><td><span class="cm">     * &lt;pre name="test"&gt;  </span></td></tr><tr><th id="L152"><a href="#L152">152</a></th><td><span class="cm">     * #THROWS SailoException   </span></td></tr><tr><th id="L153"><a href="#L153">153</a></th><td><span class="cm">     *   Elokuvat elokuvat = new Elokuvat();  </span></td></tr><tr><th id="L154"><a href="#L154">154</a></th><td><span class="cm">     *   Elokuva elokuva1 = new Elokuva(); elokuva1.parse("1|Kummisetä I|1972|Rikos, Draama|9.2|Francis Ford Coppola");  </span></td></tr><tr><th id="L155"><a href="#L155">155</a></th><td><span class="cm">     *   Elokuva elokuva2 = new Elokuva(); elokuva2.parse("2|Kummisetä II|1974|Rikos, Draama|9.0|Francis Ford Coppola");  </span></td></tr><tr><th id="L156"><a href="#L156">156</a></th><td><span class="cm">     *   Elokuva elokuva3 = new Elokuva(); elokuva3.parse("3|Kummisetä III|1990|Rikos, Draama|7.6|Francis Ford Coppola");  </span></td></tr><tr><th id="L157"><a href="#L157">157</a></th><td><span class="cm">     *   elokuvat.lisaa(elokuva1); elokuvat.lisaa(elokuva2); elokuvat.lisaa(elokuva3);</span></td></tr><tr><th id="L158"><a href="#L158">158</a></th><td><span class="cm">     * &lt;/pre&gt;  </span></td></tr><tr><th id="L159"><a href="#L159">159</a></th><td><span class="cm">     */</span></td></tr><tr><th id="L160"><a href="#L160">160</a></th><td>    <span class="kd">public</span> Collection<span class="o">&lt;</span>Elokuva<span class="o">&gt;</span> etsi<span class="o">(</span>String hakuehto<span class="o">,</span> <span class="kt">int</span> k<span class="o">)</span> <span class="o">{</span>  </td></tr><tr><th id="L161"><a href="#L161">161</a></th><td>        String ehto <span class="o">=</span> <span class="s">"*"</span><span class="o">;</span> </td></tr><tr><th id="L162"><a href="#L162">162</a></th><td>        <span class="k">if</span> <span class="o">(</span> hakuehto <span class="o">!=</span> <span class="kc">null</span> <span class="o">&amp;&amp;</span> hakuehto<span class="o">.</span><span class="na">length</span><span class="o">()</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="o">)</span> <span class="o">{</span></td></tr><tr><th id="L163"><a href="#L163">163</a></th><td>            ehto <span class="o">=</span> hakuehto<span class="o">;</span> </td></tr><tr><th id="L164"><a href="#L164">164</a></th><td>        <span class="o">}</span></td></tr><tr><th id="L165"><a href="#L165">165</a></th><td>        <span class="kt">int</span> hk <span class="o">=</span> k<span class="o">;</span> </td></tr><tr><th id="L166"><a href="#L166">166</a></th><td>        Collection<span class="o">&lt;</span>Elokuva<span class="o">&gt;</span> loytyneet <span class="o">=</span> <span class="k">new</span> ArrayList<span class="o">&lt;</span>Elokuva<span class="o">&gt;();</span> </td></tr><tr><th id="L167"><a href="#L167">167</a></th><td>        <span class="k">for</span> <span class="o">(</span>Elokuva elokuva <span class="o">:</span> <span class="k">this</span><span class="o">)</span> <span class="o">{</span> </td></tr><tr><th id="L168"><a href="#L168">168</a></th><td>            <span class="k">if</span> <span class="o">(</span>WildChars<span class="o">.</span><span class="na">onkoSamat</span><span class="o">(</span>elokuva<span class="o">.</span><span class="na">anna</span><span class="o">(</span>hk<span class="o">),</span> ehto<span class="o">))</span> loytyneet<span class="o">.</span><span class="na">add</span><span class="o">(</span>elokuva<span class="o">);</span>   </td></tr><tr><th id="L169"><a href="#L169">169</a></th><td>        <span class="o">}</span></td></tr><tr><th id="L170"><a href="#L170">170</a></th><td>        <span class="k">return</span> loytyneet<span class="o">;</span></td></tr><tr><th id="L171"><a href="#L171">171</a></th><td>    <span class="o">}</span></td></tr><tr><th id="L172"><a href="#L172">172</a></th><td>    </td></tr><tr><th id="L173"><a href="#L173">173</a></th><td>    </td></tr><tr><th id="L174"><a href="#L174">174</a></th><td>    <span class="cm">/**</span></td></tr><tr><th id="L175"><a href="#L175">175</a></th><td><span class="cm">     * Etsii elokuvan id:n perusteella</span></td></tr><tr><th id="L176"><a href="#L176">176</a></th><td><span class="cm">     * @param id tunnusnumero, jonka mukaan etsitään</span></td></tr><tr><th id="L177"><a href="#L177">177</a></th><td><span class="cm">     * @return löytyneen elokuvan indeksi tai -1 jos ei löydy</span></td></tr><tr><th id="L178"><a href="#L178">178</a></th><td><span class="cm">     * &lt;pre name="test"&gt;</span></td></tr><tr><th id="L179"><a href="#L179">179</a></th><td><span class="cm">     * #THROWS SailoException </span></td></tr><tr><th id="L180"><a href="#L180">180</a></th><td><span class="cm">     * Elokuvat elokuvat = new Elokuvat();</span></td></tr><tr><th id="L181"><a href="#L181">181</a></th><td><span class="cm">     * Elokuva elokuva1 = new Elokuva(), elokuva2 = new Elokuva(), elokuva3 = new Elokuva();</span></td></tr><tr><th id="L182"><a href="#L182">182</a></th><td><span class="cm">     * elokuva1.rekisteroi(); elokuva2.rekisteroi(); elokuva3.rekisteroi();</span></td></tr><tr><th id="L183"><a href="#L183">183</a></th><td><span class="cm">     * int id1 = elokuva1.getTunnusNro();</span></td></tr><tr><th id="L184"><a href="#L184">184</a></th><td><span class="cm">     * elokuvat.lisaa(elokuva1); elokuvat.lisaa(elokuva2); elokuvat.lisaa(elokuva3);</span></td></tr><tr><th id="L185"><a href="#L185">185</a></th><td><span class="cm">     * elokuvat.etsiId(id1+1) === 1;</span></td></tr><tr><th id="L186"><a href="#L186">186</a></th><td><span class="cm">     * elokuvat.etsiId(id1+2) === 2;</span></td></tr><tr><th id="L187"><a href="#L187">187</a></th><td><span class="cm">     * &lt;/pre&gt;</span></td></tr><tr><th id="L188"><a href="#L188">188</a></th><td><span class="cm">     */</span> </td></tr><tr><th id="L189"><a href="#L189">189</a></th><td>    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">etsiId</span><span class="o">(</span><span class="kt">int</span> id<span class="o">)</span> <span class="o">{</span> </td></tr><tr><th id="L190"><a href="#L190">190</a></th><td>        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> i <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> i <span class="o">&lt;</span> lkm<span class="o">;</span> i<span class="o">++)</span> <span class="o">{</span></td></tr><tr><th id="L191"><a href="#L191">191</a></th><td>            <span class="k">if</span> <span class="o">(</span>id <span class="o">==</span> alkiot<span class="o">[</span>i<span class="o">].</span><span class="na">getTunnusNro</span><span class="o">())</span> <span class="o">{</span></td></tr><tr><th id="L192"><a href="#L192">192</a></th><td>                <span class="k">return</span> i<span class="o">;</span> </td></tr><tr><th id="L193"><a href="#L193">193</a></th><td>            <span class="o">}</span></td></tr><tr><th id="L194"><a href="#L194">194</a></th><td>        <span class="o">}</span></td></tr><tr><th id="L195"><a href="#L195">195</a></th><td>        <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span> </td></tr><tr><th id="L196"><a href="#L196">196</a></th><td>    <span class="o">}</span></td></tr><tr><th id="L197"><a href="#L197">197</a></th><td>    </td></tr><tr><th id="L198"><a href="#L198">198</a></th><td>    </td></tr><tr><th id="L199"><a href="#L199">199</a></th><td>    <span class="cm">/** </span></td></tr><tr><th id="L200"><a href="#L200">200</a></th><td><span class="cm">     * Palauttaa varakopiotiedoston nimen </span></td></tr><tr><th id="L201"><a href="#L201">201</a></th><td><span class="cm">     * @return varakopiotiedoston nimi </span></td></tr><tr><th id="L202"><a href="#L202">202</a></th><td><span class="cm">     */</span> </td></tr><tr><th id="L203"><a href="#L203">203</a></th><td>    <span class="kd">public</span> String <span class="nf">getBakNimi</span><span class="o">()</span> <span class="o">{</span> </td></tr><tr><th id="L204"><a href="#L204">204</a></th><td>        <span class="k">return</span> tiedostonPerusNimi <span class="o">+</span> <span class="s">".bak"</span><span class="o">;</span> </td></tr><tr><th id="L205"><a href="#L205">205</a></th><td>    <span class="o">}</span></td></tr><tr><th id="L206"><a href="#L206">206</a></th><td>    </td></tr><tr><th id="L207"><a href="#L207">207</a></th><td>    </td></tr><tr><th id="L208"><a href="#L208">208</a></th><td>    <span class="cm">/** </span></td></tr><tr><th id="L209"><a href="#L209">209</a></th><td><span class="cm">     * Palauttaa Elokuvarekisterin koko nimen </span></td></tr><tr><th id="L210"><a href="#L210">210</a></th><td><span class="cm">     * @return Elokuvarekisterin koko nimi merkkijononna </span></td></tr><tr><th id="L211"><a href="#L211">211</a></th><td><span class="cm">     */</span> </td></tr><tr><th id="L212"><a href="#L212">212</a></th><td>    <span class="kd">public</span> String <span class="nf">getKokoNimi</span><span class="o">()</span> <span class="o">{</span> </td></tr><tr><th id="L213"><a href="#L213">213</a></th><td>        <span class="k">return</span> kokoNimi<span class="o">;</span> </td></tr><tr><th id="L214"><a href="#L214">214</a></th><td>    <span class="o">}</span> </td></tr><tr><th id="L215"><a href="#L215">215</a></th><td>    </td></tr><tr><th id="L216"><a href="#L216">216</a></th><td>    </td></tr><tr><th id="L217"><a href="#L217">217</a></th><td>    <span class="cm">/**</span></td></tr><tr><th id="L218"><a href="#L218">218</a></th><td><span class="cm">     * Palauttaa elokuvarekisterin elokuvien lukumäärän</span></td></tr><tr><th id="L219"><a href="#L219">219</a></th><td><span class="cm">     * @return elokuvien lukumäärä</span></td></tr><tr><th id="L220"><a href="#L220">220</a></th><td><span class="cm">     */</span></td></tr><tr><th id="L221"><a href="#L221">221</a></th><td>    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getLkm</span><span class="o">()</span> <span class="o">{</span></td></tr><tr><th id="L222"><a href="#L222">222</a></th><td>        <span class="k">return</span> lkm<span class="o">;</span></td></tr><tr><th id="L223"><a href="#L223">223</a></th><td>    <span class="o">}</span> </td></tr><tr><th id="L224"><a href="#L224">224</a></th><td>    </td></tr><tr><th id="L225"><a href="#L225">225</a></th><td>    </td></tr><tr><th id="L226"><a href="#L226">226</a></th><td>    <span class="cm">/** </span></td></tr><tr><th id="L227"><a href="#L227">227</a></th><td><span class="cm">     * Palauttaa tiedoston nimen, jota käytetään tallennukseen </span></td></tr><tr><th id="L228"><a href="#L228">228</a></th><td><span class="cm">     * @return tallennustiedoston nimi </span></td></tr><tr><th id="L229"><a href="#L229">229</a></th><td><span class="cm">     */</span> </td></tr><tr><th id="L230"><a href="#L230">230</a></th><td>    <span class="kd">public</span> String <span class="nf">getTiedostonNimi</span><span class="o">()</span> <span class="o">{</span> </td></tr><tr><th id="L231"><a href="#L231">231</a></th><td>        <span class="k">return</span> <span class="nf">getTiedostonPerusNimi</span><span class="o">()</span> <span class="o">+</span> <span class="s">".dat"</span><span class="o">;</span> </td></tr><tr><th id="L232"><a href="#L232">232</a></th><td>    <span class="o">}</span> </td></tr><tr><th id="L233"><a href="#L233">233</a></th><td> </td></tr><tr><th id="L234"><a href="#L234">234</a></th><td> </td></tr><tr><th id="L235"><a href="#L235">235</a></th><td>    <span class="cm">/** </span></td></tr><tr><th id="L236"><a href="#L236">236</a></th><td><span class="cm">     * Palauttaa tiedoston nimen, jota käytetään tallennukseen </span></td></tr><tr><th id="L237"><a href="#L237">237</a></th><td><span class="cm">     * @return tallennustiedoston nimi </span></td></tr><tr><th id="L238"><a href="#L238">238</a></th><td><span class="cm">     */</span> </td></tr><tr><th id="L239"><a href="#L239">239</a></th><td>    <span class="kd">public</span> String <span class="nf">getTiedostonPerusNimi</span><span class="o">()</span> <span class="o">{</span> </td></tr><tr><th id="L240"><a href="#L240">240</a></th><td>        <span class="k">return</span> tiedostonPerusNimi<span class="o">;</span> </td></tr><tr><th id="L241"><a href="#L241">241</a></th><td>    <span class="o">}</span></td></tr><tr><th id="L242"><a href="#L242">242</a></th><td>    </td></tr><tr><th id="L243"><a href="#L243">243</a></th><td>    </td></tr><tr><th id="L244"><a href="#L244">244</a></th><td>    <span class="cm">/** </span></td></tr><tr><th id="L245"><a href="#L245">245</a></th><td><span class="cm">     * Palautetaan iteraattori elokuvista. </span></td></tr><tr><th id="L246"><a href="#L246">246</a></th><td><span class="cm">     * @return elokuva iteraattori </span></td></tr><tr><th id="L247"><a href="#L247">247</a></th><td><span class="cm">     */</span> </td></tr><tr><th id="L248"><a href="#L248">248</a></th><td>    <span class="nd">@Override</span> </td></tr><tr><th id="L249"><a href="#L249">249</a></th><td>    <span class="kd">public</span> Iterator<span class="o">&lt;</span>Elokuva<span class="o">&gt;</span> iterator<span class="o">()</span> <span class="o">{</span> </td></tr><tr><th id="L250"><a href="#L250">250</a></th><td>        <span class="k">return</span> <span class="k">new</span> <span class="nf">ElokuvatIterator</span><span class="o">();</span> </td></tr><tr><th id="L251"><a href="#L251">251</a></th><td>    <span class="o">}</span> </td></tr><tr><th id="L252"><a href="#L252">252</a></th><td> </td></tr><tr><th id="L253"><a href="#L253">253</a></th><td> </td></tr><tr><th id="L254"><a href="#L254">254</a></th><td>    <span class="cm">/**</span></td></tr><tr><th id="L255"><a href="#L255">255</a></th><td><span class="cm">     * Korvaa elokuvan tietorakenteessa.  Ottaa elokuvan omistukseensa.</span></td></tr><tr><th id="L256"><a href="#L256">256</a></th><td><span class="cm">     * Etsitään samalla tunnusnumerolla oleva elokuva.  Jos ei löydy,</span></td></tr><tr><th id="L257"><a href="#L257">257</a></th><td><span class="cm">     * niin lisätään uutena elokuvan.</span></td></tr><tr><th id="L258"><a href="#L258">258</a></th><td><span class="cm">     * @param elokuva lisättävän elokuvan viite.  Huom tietorakenne muuttuu omistajaksi</span></td></tr><tr><th id="L259"><a href="#L259">259</a></th><td><span class="cm">     * @throws SailoException jos tietorakenne on jo täynnä</span></td></tr><tr><th id="L260"><a href="#L260">260</a></th><td><span class="cm">     * &lt;pre name="test"&gt;</span></td></tr><tr><th id="L261"><a href="#L261">261</a></th><td><span class="cm">     * #THROWS SailoException,CloneNotSupportedException</span></td></tr><tr><th id="L262"><a href="#L262">262</a></th><td><span class="cm">     * #PACKAGEIMPORT</span></td></tr><tr><th id="L263"><a href="#L263">263</a></th><td><span class="cm">     * Elokuvat elokuvat = new Elokuvat();</span></td></tr><tr><th id="L264"><a href="#L264">264</a></th><td><span class="cm">     * Elokuva elokuva1 = new Elokuva(), elokuva2 = new Elokuva();</span></td></tr><tr><th id="L265"><a href="#L265">265</a></th><td><span class="cm">     * elokuva1.rekisteroi(); elokuva2.rekisteroi();</span></td></tr><tr><th id="L266"><a href="#L266">266</a></th><td><span class="cm">     * elokuvat.getLkm() === 0;</span></td></tr><tr><th id="L267"><a href="#L267">267</a></th><td><span class="cm">     * elokuvat.korvaaTaiLisaa(elokuva1); elokuvat.getLkm() === 1;</span></td></tr><tr><th id="L268"><a href="#L268">268</a></th><td><span class="cm">     * elokuvat.korvaaTaiLisaa(elokuva2); elokuvat.getLkm() === 2;</span></td></tr><tr><th id="L269"><a href="#L269">269</a></th><td><span class="cm">     * Elokuva elokuva3 = elokuva1.clone();</span></td></tr><tr><th id="L270"><a href="#L270">270</a></th><td><span class="cm">     * elokuva3.aseta(3,"kkk");</span></td></tr><tr><th id="L271"><a href="#L271">271</a></th><td><span class="cm">     * Iterator&lt;Elokuva&gt; it = elokuvat.iterator();</span></td></tr><tr><th id="L272"><a href="#L272">272</a></th><td><span class="cm">     * it.next() == elokuva1 === true;</span></td></tr><tr><th id="L273"><a href="#L273">273</a></th><td><span class="cm">     * elokuvat.korvaaTaiLisaa(elokuva3); elokuvat.getLkm() === 2;</span></td></tr><tr><th id="L274"><a href="#L274">274</a></th><td><span class="cm">     * it = elokuvat.iterator();</span></td></tr><tr><th id="L275"><a href="#L275">275</a></th><td><span class="cm">     * Elokuva j0 = it.next();</span></td></tr><tr><th id="L276"><a href="#L276">276</a></th><td><span class="cm">     * j0 === elokuva3;</span></td></tr><tr><th id="L277"><a href="#L277">277</a></th><td><span class="cm">     * j0 == elokuva3 === true;</span></td></tr><tr><th id="L278"><a href="#L278">278</a></th><td><span class="cm">     * j0 == elokuva1 === false;</span></td></tr><tr><th id="L279"><a href="#L279">279</a></th><td><span class="cm">     * &lt;/pre&gt;</span></td></tr><tr><th id="L280"><a href="#L280">280</a></th><td><span class="cm">     */</span></td></tr><tr><th id="L281"><a href="#L281">281</a></th><td>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">korvaaTaiLisaa</span><span class="o">(</span>Elokuva elokuva<span class="o">)</span> <span class="kd">throws</span> SailoException <span class="o">{</span></td></tr><tr><th id="L282"><a href="#L282">282</a></th><td>        <span class="kt">int</span> id <span class="o">=</span> elokuva<span class="o">.</span><span class="na">getTunnusNro</span><span class="o">();</span></td></tr><tr><th id="L283"><a href="#L283">283</a></th><td>        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> i <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> i <span class="o">&lt;</span> lkm<span class="o">;</span> i<span class="o">++)</span> <span class="o">{</span></td></tr><tr><th id="L284"><a href="#L284">284</a></th><td>            <span class="k">if</span> <span class="o">(</span> alkiot<span class="o">[</span>i<span class="o">].</span><span class="na">getTunnusNro</span><span class="o">()</span> <span class="o">==</span> id <span class="o">)</span> <span class="o">{</span></td></tr><tr><th id="L285"><a href="#L285">285</a></th><td>                alkiot<span class="o">[</span>i<span class="o">]</span> <span class="o">=</span> elokuva<span class="o">;</span></td></tr><tr><th id="L286"><a href="#L286">286</a></th><td>                muutettu <span class="o">=</span> <span class="kc">true</span><span class="o">;</span></td></tr><tr><th id="L287"><a href="#L287">287</a></th><td>                <span class="k">return</span><span class="o">;</span></td></tr><tr><th id="L288"><a href="#L288">288</a></th><td>            <span class="o">}</span></td></tr><tr><th id="L289"><a href="#L289">289</a></th><td>        <span class="o">}</span></td></tr><tr><th id="L290"><a href="#L290">290</a></th><td>        lisaa<span class="o">(</span>elokuva<span class="o">);</span></td></tr><tr><th id="L291"><a href="#L291">291</a></th><td>    <span class="o">}</span> </td></tr><tr><th id="L292"><a href="#L292">292</a></th><td> </td></tr><tr><th id="L293"><a href="#L293">293</a></th><td> </td></tr><tr><th id="L294"><a href="#L294">294</a></th><td>    <span class="cm">/**</span></td></tr><tr><th id="L295"><a href="#L295">295</a></th><td><span class="cm">     * Lisää uuden elokuvan tietorakenteeseen</span></td></tr><tr><th id="L296"><a href="#L296">296</a></th><td><span class="cm">     * @param elokuva lisättävän elokuvan viite</span></td></tr><tr><th id="L297"><a href="#L297">297</a></th><td><span class="cm">     * @example</span></td></tr><tr><th id="L298"><a href="#L298">298</a></th><td><span class="cm">     * &lt;pre name="test"&gt;</span></td></tr><tr><th id="L299"><a href="#L299">299</a></th><td><span class="cm">     * Elokuvat elokuvat = new Elokuvat();</span></td></tr><tr><th id="L300"><a href="#L300">300</a></th><td><span class="cm">     * Elokuva elokuva1 = new Elokuva(), elokuva2 = new Elokuva();</span></td></tr><tr><th id="L301"><a href="#L301">301</a></th><td><span class="cm">     * elokuvat.getLkm() === 0;</span></td></tr><tr><th id="L302"><a href="#L302">302</a></th><td><span class="cm">     * elokuvat.lisaa(elokuva1); elokuvat.getLkm() === 1;</span></td></tr><tr><th id="L303"><a href="#L303">303</a></th><td><span class="cm">     * elokuvat.lisaa(elokuva2); elokuvat.getLkm() === 2;</span></td></tr><tr><th id="L304"><a href="#L304">304</a></th><td><span class="cm">     * elokuvat.lisaa(elokuva1); elokuvat.getLkm() === 3;</span></td></tr><tr><th id="L305"><a href="#L305">305</a></th><td><span class="cm">     * elokuvat.anna(0) === elokuva1;</span></td></tr><tr><th id="L306"><a href="#L306">306</a></th><td><span class="cm">     * elokuvat.anna(1) === elokuva2;</span></td></tr><tr><th id="L307"><a href="#L307">307</a></th><td><span class="cm">     * elokuvat.anna(2) === elokuva1;</span></td></tr><tr><th id="L308"><a href="#L308">308</a></th><td><span class="cm">     * elokuvat.anna(1) == elokuva1 === false;</span></td></tr><tr><th id="L309"><a href="#L309">309</a></th><td><span class="cm">     * elokuvat.anna(1) == elokuva2 === true;</span></td></tr><tr><th id="L310"><a href="#L310">310</a></th><td><span class="cm">     * elokuvat.anna(3) === elokuva1; #THROWS IndexOutOfBoundsException </span></td></tr><tr><th id="L311"><a href="#L311">311</a></th><td><span class="cm">     * elokuvat.lisaa(elokuva1); elokuvat.getLkm() === 4;</span></td></tr><tr><th id="L312"><a href="#L312">312</a></th><td><span class="cm">     * elokuvat.lisaa(elokuva1); elokuvat.getLkm() === 5;</span></td></tr><tr><th id="L313"><a href="#L313">313</a></th><td><span class="cm">     * elokuvat.lisaa(elokuva1);</span></td></tr><tr><th id="L314"><a href="#L314">314</a></th><td><span class="cm">     * &lt;/pre&gt;</span></td></tr><tr><th id="L315"><a href="#L315">315</a></th><td><span class="cm">     */</span></td></tr><tr><th id="L316"><a href="#L316">316</a></th><td>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">lisaa</span><span class="o">(</span>Elokuva elokuva<span class="o">)</span> <span class="o">{</span></td></tr><tr><th id="L317"><a href="#L317">317</a></th><td>        <span class="k">if</span> <span class="o">(</span>lkm <span class="o">&gt;=</span> alkiot<span class="o">.</span><span class="na">length</span><span class="o">)</span> <span class="o">{</span></td></tr><tr><th id="L318"><a href="#L318">318</a></th><td>            alkiot <span class="o">=</span> Arrays<span class="o">.</span><span class="na">copyOf</span><span class="o">(</span>alkiot<span class="o">,</span> lkm<span class="o">+</span><span class="mi">20</span><span class="o">);</span></td></tr><tr><th id="L319"><a href="#L319">319</a></th><td>        <span class="o">}</span></td></tr><tr><th id="L320"><a href="#L320">320</a></th><td>        alkiot<span class="o">[</span>lkm<span class="o">]</span> <span class="o">=</span> elokuva<span class="o">;</span></td></tr><tr><th id="L321"><a href="#L321">321</a></th><td>        lkm<span class="o">++;</span></td></tr><tr><th id="L322"><a href="#L322">322</a></th><td>        muutettu <span class="o">=</span> <span class="kc">true</span><span class="o">;</span></td></tr><tr><th id="L323"><a href="#L323">323</a></th><td>    <span class="o">}</span> </td></tr><tr><th id="L324"><a href="#L324">324</a></th><td> </td></tr><tr><th id="L325"><a href="#L325">325</a></th><td> </td></tr><tr><th id="L326"><a href="#L326">326</a></th><td>    <span class="cm">/** </span></td></tr><tr><th id="L327"><a href="#L327">327</a></th><td><span class="cm">     * Luetaan aikaisemmin annetun nimisestä tiedostosta </span></td></tr><tr><th id="L328"><a href="#L328">328</a></th><td><span class="cm">     * @throws SailoException jos tulee poikkeus </span></td></tr><tr><th id="L329"><a href="#L329">329</a></th><td><span class="cm">     */</span> </td></tr><tr><th id="L330"><a href="#L330">330</a></th><td>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">lueTiedostosta</span><span class="o">()</span> <span class="kd">throws</span> SailoException <span class="o">{</span> </td></tr><tr><th id="L331"><a href="#L331">331</a></th><td>        lueTiedostosta<span class="o">(</span>getTiedostonPerusNimi<span class="o">());</span> </td></tr><tr><th id="L332"><a href="#L332">332</a></th><td>    <span class="o">}</span> </td></tr><tr><th id="L333"><a href="#L333">333</a></th><td> </td></tr><tr><th id="L334"><a href="#L334">334</a></th><td> </td></tr><tr><th id="L335"><a href="#L335">335</a></th><td>    <span class="cm">/**</span></td></tr><tr><th id="L336"><a href="#L336">336</a></th><td><span class="cm">     * Lukee elokuvat tiedostosta.  </span></td></tr><tr><th id="L337"><a href="#L337">337</a></th><td><span class="cm">     * @param tied tiedoston perusnimi </span></td></tr><tr><th id="L338"><a href="#L338">338</a></th><td><span class="cm">     * @throws SailoException jos lukeminen epäonnistuu </span></td></tr><tr><th id="L339"><a href="#L339">339</a></th><td><span class="cm">     *  </span></td></tr><tr><th id="L340"><a href="#L340">340</a></th><td><span class="cm">     * @example </span></td></tr><tr><th id="L341"><a href="#L341">341</a></th><td><span class="cm">     * &lt;pre name="test"&gt; </span></td></tr><tr><th id="L342"><a href="#L342">342</a></th><td><span class="cm">     * #THROWS SailoException  </span></td></tr><tr><th id="L343"><a href="#L343">343</a></th><td><span class="cm">     * #import java.io.File; </span></td></tr><tr><th id="L344"><a href="#L344">344</a></th><td><span class="cm">     *  </span></td></tr><tr><th id="L345"><a href="#L345">345</a></th><td><span class="cm">     *  Elokuvat elokuvat = new Elokuvat(); </span></td></tr><tr><th id="L346"><a href="#L346">346</a></th><td><span class="cm">     *  Elokuva kummiseta1 = new Elokuva(), kummiseta2 = new Elokuva(); </span></td></tr><tr><th id="L347"><a href="#L347">347</a></th><td><span class="cm">     *  kummiseta1.elokuvanTiedot(); </span></td></tr><tr><th id="L348"><a href="#L348">348</a></th><td><span class="cm">     *  kummiseta2.elokuvanTiedot(); </span></td></tr><tr><th id="L349"><a href="#L349">349</a></th><td><span class="cm">     *  String hakemisto = "testielokuvat"; </span></td></tr><tr><th id="L350"><a href="#L350">350</a></th><td><span class="cm">     *  String tiedNimi = hakemisto+"/nimet"; </span></td></tr><tr><th id="L351"><a href="#L351">351</a></th><td><span class="cm">     *  File ftied = new File(tiedNimi+".dat"); </span></td></tr><tr><th id="L352"><a href="#L352">352</a></th><td><span class="cm">     *  File dir = new File(hakemisto); </span></td></tr><tr><th id="L353"><a href="#L353">353</a></th><td><span class="cm">     *  dir.mkdir(); </span></td></tr><tr><th id="L354"><a href="#L354">354</a></th><td><span class="cm">     *  ftied.delete(); </span></td></tr><tr><th id="L355"><a href="#L355">355</a></th><td><span class="cm">     *  elokuvat.lueTiedostosta(tiedNimi); #THROWS SailoException </span></td></tr><tr><th id="L356"><a href="#L356">356</a></th><td><span class="cm">     *  elokuvat.lisaa(kummiseta1); </span></td></tr><tr><th id="L357"><a href="#L357">357</a></th><td><span class="cm">     *  elokuvat.lisaa(kummiseta2); </span></td></tr><tr><th id="L358"><a href="#L358">358</a></th><td><span class="cm">     *  elokuvat.tallenna(); </span></td></tr><tr><th id="L359"><a href="#L359">359</a></th><td><span class="cm">     *  elokuvat = new Elokuvat();            // Poistetaan vanhat luomalla uusi </span></td></tr><tr><th id="L360"><a href="#L360">360</a></th><td><span class="cm">     *  elokuvat.lueTiedostosta(tiedNimi);  // johon ladataan tiedot tiedostosta. </span></td></tr><tr><th id="L361"><a href="#L361">361</a></th><td><span class="cm">     *  Iterator&lt;Elokuva&gt; i = elokuvat.iterator(); </span></td></tr><tr><th id="L362"><a href="#L362">362</a></th><td><span class="cm">     *  i.next() === kummiseta1; </span></td></tr><tr><th id="L363"><a href="#L363">363</a></th><td><span class="cm">     *  i.next() === kummiseta2; </span></td></tr><tr><th id="L364"><a href="#L364">364</a></th><td><span class="cm">     *  i.hasNext() === false; </span></td></tr><tr><th id="L365"><a href="#L365">365</a></th><td><span class="cm">     *  elokuvat.lisaa(kummiseta2); </span></td></tr><tr><th id="L366"><a href="#L366">366</a></th><td><span class="cm">     *  elokuvat.tallenna(); </span></td></tr><tr><th id="L367"><a href="#L367">367</a></th><td><span class="cm">     *  ftied.delete() === true; </span></td></tr><tr><th id="L368"><a href="#L368">368</a></th><td><span class="cm">     *  File fbak = new File(tiedNimi+".bak"); </span></td></tr><tr><th id="L369"><a href="#L369">369</a></th><td><span class="cm">     *  fbak.delete() === true; </span></td></tr><tr><th id="L370"><a href="#L370">370</a></th><td><span class="cm">     *  dir.delete() === true; </span></td></tr><tr><th id="L371"><a href="#L371">371</a></th><td><span class="cm">     * &lt;/pre&gt; </span></td></tr><tr><th id="L372"><a href="#L372">372</a></th><td><span class="cm">     */</span> </td></tr><tr><th id="L373"><a href="#L373">373</a></th><td>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">lueTiedostosta</span><span class="o">(</span>String tied<span class="o">)</span> <span class="kd">throws</span> SailoException <span class="o">{</span> </td></tr><tr><th id="L374"><a href="#L374">374</a></th><td>        setTiedostonPerusNimi<span class="o">(</span>tied<span class="o">);</span> </td></tr><tr><th id="L375"><a href="#L375">375</a></th><td>        <span class="k">try</span> <span class="o">(</span> BufferedReader fi <span class="o">=</span> <span class="k">new</span> BufferedReader<span class="o">(</span><span class="k">new</span> FileReader<span class="o">(</span>getTiedostonNimi<span class="o">()))</span> <span class="o">)</span> <span class="o">{</span> </td></tr><tr><th id="L376"><a href="#L376">376</a></th><td>            kokoNimi <span class="o">=</span> fi<span class="o">.</span><span class="na">readLine</span><span class="o">();</span> </td></tr><tr><th id="L377"><a href="#L377">377</a></th><td>            <span class="k">if</span> <span class="o">(</span> kokoNimi <span class="o">==</span> <span class="kc">null</span> <span class="o">)</span> <span class="o">{</span></td></tr><tr><th id="L378"><a href="#L378">378</a></th><td>                <span class="k">throw</span> <span class="k">new</span> <span class="nf">SailoException</span><span class="o">(</span><span class="s">"Elokuvarekisterin nimi puuttuu"</span><span class="o">);</span> </td></tr><tr><th id="L379"><a href="#L379">379</a></th><td>            <span class="o">}</span></td></tr><tr><th id="L380"><a href="#L380">380</a></th><td>            String rivi <span class="o">=</span> fi<span class="o">.</span><span class="na">readLine</span><span class="o">();</span> </td></tr><tr><th id="L381"><a href="#L381">381</a></th><td>            <span class="k">if</span> <span class="o">(</span> rivi <span class="o">==</span> <span class="kc">null</span> <span class="o">)</span> <span class="o">{</span></td></tr><tr><th id="L382"><a href="#L382">382</a></th><td>                <span class="k">throw</span> <span class="k">new</span> <span class="nf">SailoException</span><span class="o">(</span><span class="s">"Maksimikoko puuttuu"</span><span class="o">);</span> </td></tr><tr><th id="L383"><a href="#L383">383</a></th><td>            <span class="o">}</span></td></tr><tr><th id="L384"><a href="#L384">384</a></th><td>    </td></tr><tr><th id="L385"><a href="#L385">385</a></th><td>            <span class="k">while</span> <span class="o">(</span> <span class="o">(</span>rivi <span class="o">=</span> fi<span class="o">.</span><span class="na">readLine</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span> <span class="o">)</span> <span class="o">{</span> </td></tr><tr><th id="L386"><a href="#L386">386</a></th><td>                rivi <span class="o">=</span> rivi<span class="o">.</span><span class="na">trim</span><span class="o">();</span> </td></tr><tr><th id="L387"><a href="#L387">387</a></th><td>                <span class="k">if</span> <span class="o">(</span> <span class="s">""</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span>rivi<span class="o">)</span> <span class="o">||</span> rivi<span class="o">.</span><span class="na">charAt</span><span class="o">(</span><span class="mi">0</span><span class="o">)</span> <span class="o">==</span> <span class="sc">';'</span> <span class="o">)</span> <span class="o">{</span></td></tr><tr><th id="L388"><a href="#L388">388</a></th><td>                    <span class="k">continue</span><span class="o">;</span> </td></tr><tr><th id="L389"><a href="#L389">389</a></th><td>                <span class="o">}</span></td></tr><tr><th id="L390"><a href="#L390">390</a></th><td>                Elokuva elokuva <span class="o">=</span> <span class="k">new</span> Elokuva<span class="o">();</span> </td></tr><tr><th id="L391"><a href="#L391">391</a></th><td>                elokuva<span class="o">.</span><span class="na">parse</span><span class="o">(</span>rivi<span class="o">);</span></td></tr><tr><th id="L392"><a href="#L392">392</a></th><td>                lisaa<span class="o">(</span>elokuva<span class="o">);</span> </td></tr><tr><th id="L393"><a href="#L393">393</a></th><td>            <span class="o">}</span> </td></tr><tr><th id="L394"><a href="#L394">394</a></th><td>            muutettu <span class="o">=</span> <span class="kc">false</span><span class="o">;</span></td></tr><tr><th id="L395"><a href="#L395">395</a></th><td>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span> FileNotFoundException e <span class="o">)</span> <span class="o">{</span> </td></tr><tr><th id="L396"><a href="#L396">396</a></th><td>            <span class="k">throw</span> <span class="k">new</span> <span class="nf">SailoException</span><span class="o">(</span><span class="s">"Tiedosto "</span> <span class="o">+</span> getTiedostonNimi<span class="o">()</span> <span class="o">+</span> <span class="s">" ei aukea"</span><span class="o">);</span> </td></tr><tr><th id="L397"><a href="#L397">397</a></th><td>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span> IOException e <span class="o">)</span> <span class="o">{</span> </td></tr><tr><th id="L398"><a href="#L398">398</a></th><td>            <span class="k">throw</span> <span class="k">new</span> <span class="nf">SailoException</span><span class="o">(</span><span class="s">"Ongelmia tiedoston kanssa: "</span> <span class="o">+</span> e<span class="o">.</span><span class="na">getMessage</span><span class="o">());</span> </td></tr><tr><th id="L399"><a href="#L399">399</a></th><td>        <span class="o">}</span> </td></tr><tr><th id="L400"><a href="#L400">400</a></th><td>    <span class="o">}</span> </td></tr><tr><th id="L401"><a href="#L401">401</a></th><td> </td></tr><tr><th id="L402"><a href="#L402">402</a></th><td> </td></tr><tr><th id="L403"><a href="#L403">403</a></th><td>    <span class="cm">/**</span></td></tr><tr><th id="L404"><a href="#L404">404</a></th><td><span class="cm">     * Poistaa elokuvan jolla on valittu tunnusnumero </span></td></tr><tr><th id="L405"><a href="#L405">405</a></th><td><span class="cm">     * @param id poistettavan elokuvan tunnusnumero</span></td></tr><tr><th id="L406"><a href="#L406">406</a></th><td><span class="cm">     * @return 1 jos poistettiin, 0 jos ei löydy</span></td></tr><tr><th id="L407"><a href="#L407">407</a></th><td><span class="cm">     * @example</span></td></tr><tr><th id="L408"><a href="#L408">408</a></th><td><span class="cm">     * &lt;pre name="test"&gt;</span></td></tr><tr><th id="L409"><a href="#L409">409</a></th><td><span class="cm">     * #THROWS SailoException </span></td></tr><tr><th id="L410"><a href="#L410">410</a></th><td><span class="cm">     * Elokuvat elokuvat = new Elokuvat();</span></td></tr><tr><th id="L411"><a href="#L411">411</a></th><td><span class="cm">     * Elokuva elokuva1 = new Elokuva(), elokuva2 = new Elokuva(), elokuva3 = new Elokuva();</span></td></tr><tr><th id="L412"><a href="#L412">412</a></th><td><span class="cm">     * elokuva1.rekisteroi(); elokuva2.rekisteroi(); elokuva3.rekisteroi();</span></td></tr><tr><th id="L413"><a href="#L413">413</a></th><td><span class="cm">     * int id1 = elokuva1.getTunnusNro();</span></td></tr><tr><th id="L414"><a href="#L414">414</a></th><td><span class="cm">     * elokuvat.lisaa(elokuva1); elokuvat.lisaa(elokuva2); elokuvat.lisaa(elokuva3);</span></td></tr><tr><th id="L415"><a href="#L415">415</a></th><td><span class="cm">     * elokuvat.poista(id1+1) === 1;</span></td></tr><tr><th id="L416"><a href="#L416">416</a></th><td><span class="cm">     * elokuvat.poista(id1) === 1; elokuvat.getLkm() === 1;</span></td></tr><tr><th id="L417"><a href="#L417">417</a></th><td><span class="cm">     * elokuvat.poista(id1+3) === 0; elokuvat.getLkm() === 1;</span></td></tr><tr><th id="L418"><a href="#L418">418</a></th><td><span class="cm">     * &lt;/pre&gt;</span></td></tr><tr><th id="L419"><a href="#L419">419</a></th><td><span class="cm">     * </span></td></tr><tr><th id="L420"><a href="#L420">420</a></th><td><span class="cm">     */</span> </td></tr><tr><th id="L421"><a href="#L421">421</a></th><td>    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">poista</span><span class="o">(</span><span class="kt">int</span> id<span class="o">)</span> <span class="o">{</span> </td></tr><tr><th id="L422"><a href="#L422">422</a></th><td>        <span class="kt">int</span> ind <span class="o">=</span> etsiId<span class="o">(</span>id<span class="o">);</span> </td></tr><tr><th id="L423"><a href="#L423">423</a></th><td>        <span class="k">if</span> <span class="o">(</span>ind <span class="o">&lt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span></td></tr><tr><th id="L424"><a href="#L424">424</a></th><td>            <span class="k">return</span> <span class="mi">0</span><span class="o">;</span> </td></tr><tr><th id="L425"><a href="#L425">425</a></th><td>        <span class="o">}</span></td></tr><tr><th id="L426"><a href="#L426">426</a></th><td>        lkm<span class="o">--;</span> </td></tr><tr><th id="L427"><a href="#L427">427</a></th><td>        <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> i <span class="o">=</span> ind<span class="o">;</span> i <span class="o">&lt;</span> lkm<span class="o">;</span> i<span class="o">++)</span> <span class="o">{</span></td></tr><tr><th id="L428"><a href="#L428">428</a></th><td>            alkiot<span class="o">[</span>i<span class="o">]</span> <span class="o">=</span> alkiot<span class="o">[</span>i <span class="o">+</span> <span class="mi">1</span><span class="o">];</span> </td></tr><tr><th id="L429"><a href="#L429">429</a></th><td>        <span class="o">}</span></td></tr><tr><th id="L430"><a href="#L430">430</a></th><td>        alkiot<span class="o">[</span>lkm<span class="o">]</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span> </td></tr><tr><th id="L431"><a href="#L431">431</a></th><td>        muutettu <span class="o">=</span> <span class="kc">true</span><span class="o">;</span></td></tr><tr><th id="L432"><a href="#L432">432</a></th><td>        <span class="k">return</span> <span class="mi">1</span><span class="o">;</span></td></tr><tr><th id="L433"><a href="#L433">433</a></th><td>    <span class="o">}</span> </td></tr><tr><th id="L434"><a href="#L434">434</a></th><td> </td></tr><tr><th id="L435"><a href="#L435">435</a></th><td> </td></tr><tr><th id="L436"><a href="#L436">436</a></th><td>    <span class="cm">/** </span></td></tr><tr><th id="L437"><a href="#L437">437</a></th><td><span class="cm">     * Asettaa tiedoston perusnimen ilman tarkenninta </span></td></tr><tr><th id="L438"><a href="#L438">438</a></th><td><span class="cm">     * @param nimi tallennustiedoston perusnimi </span></td></tr><tr><th id="L439"><a href="#L439">439</a></th><td><span class="cm">     */</span> </td></tr><tr><th id="L440"><a href="#L440">440</a></th><td>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setTiedostonPerusNimi</span><span class="o">(</span>String nimi<span class="o">)</span> <span class="o">{</span> </td></tr><tr><th id="L441"><a href="#L441">441</a></th><td>        tiedostonPerusNimi <span class="o">=</span> nimi<span class="o">;</span> </td></tr><tr><th id="L442"><a href="#L442">442</a></th><td>    <span class="o">}</span> </td></tr><tr><th id="L443"><a href="#L443">443</a></th><td>    </td></tr><tr><th id="L444"><a href="#L444">444</a></th><td>    </td></tr><tr><th id="L445"><a href="#L445">445</a></th><td>    <span class="cm">/** </span></td></tr><tr><th id="L446"><a href="#L446">446</a></th><td><span class="cm">     * Tallentaa elokuvat tiedostoon.   </span></td></tr><tr><th id="L447"><a href="#L447">447</a></th><td><span class="cm">     * Tiedoston muoto: </span></td></tr><tr><th id="L448"><a href="#L448">448</a></th><td><span class="cm">     * &lt;pre&gt; </span></td></tr><tr><th id="L449"><a href="#L449">449</a></th><td><span class="cm">     * Elokuvarekisteri </span></td></tr><tr><th id="L450"><a href="#L450">450</a></th><td><span class="cm">     * 10 </span></td></tr><tr><th id="L451"><a href="#L451">451</a></th><td><span class="cm">     * ; kommenttirivi </span></td></tr><tr><th id="L452"><a href="#L452">452</a></th><td><span class="cm">     * |1|Kummisetä I|1972|Rikos, Draama|9.2|Francis Ford Coppola</span></td></tr><tr><th id="L453"><a href="#L453">453</a></th><td><span class="cm">     * |2|Kummisetä II|1974|Rikos, Draama|9.0|Francis Ford Coppola </span></td></tr><tr><th id="L454"><a href="#L454">454</a></th><td><span class="cm">     * &lt;/pre&gt; </span></td></tr><tr><th id="L455"><a href="#L455">455</a></th><td><span class="cm">     * @throws SailoException jos talletus epäonnistuu </span></td></tr><tr><th id="L456"><a href="#L456">456</a></th><td><span class="cm">     */</span></td></tr><tr><th id="L457"><a href="#L457">457</a></th><td>    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">tallenna</span><span class="o">()</span> <span class="kd">throws</span> SailoException <span class="o">{</span> </td></tr><tr><th id="L458"><a href="#L458">458</a></th><td>        <span class="k">if</span> <span class="o">(</span> <span class="o">!</span>muutettu <span class="o">)</span> <span class="o">{</span></td></tr><tr><th id="L459"><a href="#L459">459</a></th><td>            <span class="k">return</span><span class="o">;</span> </td></tr><tr><th id="L460"><a href="#L460">460</a></th><td>        <span class="o">}</span></td></tr><tr><th id="L461"><a href="#L461">461</a></th><td> </td></tr><tr><th id="L462"><a href="#L462">462</a></th><td>        File fbak <span class="o">=</span> <span class="k">new</span> File<span class="o">(</span>getBakNimi<span class="o">());</span> </td></tr><tr><th id="L463"><a href="#L463">463</a></th><td>        File ftied <span class="o">=</span> <span class="k">new</span> File<span class="o">(</span>getTiedostonNimi<span class="o">());</span> </td></tr><tr><th id="L464"><a href="#L464">464</a></th><td>        fbak<span class="o">.</span><span class="na">delete</span><span class="o">();</span>  </td></tr><tr><th id="L465"><a href="#L465">465</a></th><td>        ftied<span class="o">.</span><span class="na">renameTo</span><span class="o">(</span>fbak<span class="o">);</span></td></tr><tr><th id="L466"><a href="#L466">466</a></th><td> </td></tr><tr><th id="L467"><a href="#L467">467</a></th><td>        <span class="k">try</span> <span class="o">(</span> PrintWriter fo <span class="o">=</span> <span class="k">new</span> PrintWriter<span class="o">(</span><span class="k">new</span> FileWriter<span class="o">(</span>ftied<span class="o">.</span><span class="na">getCanonicalPath</span><span class="o">()))</span> <span class="o">)</span> <span class="o">{</span> </td></tr><tr><th id="L468"><a href="#L468">468</a></th><td>            fo<span class="o">.</span><span class="na">println</span><span class="o">(</span>getKokoNimi<span class="o">());</span> </td></tr><tr><th id="L469"><a href="#L469">469</a></th><td>            fo<span class="o">.</span><span class="na">println</span><span class="o">(</span>alkiot<span class="o">.</span><span class="na">length</span><span class="o">);</span> </td></tr><tr><th id="L470"><a href="#L470">470</a></th><td>            <span class="k">for</span> <span class="o">(</span>Elokuva elokuva <span class="o">:</span> <span class="k">this</span><span class="o">)</span> <span class="o">{</span> </td></tr><tr><th id="L471"><a href="#L471">471</a></th><td>                fo<span class="o">.</span><span class="na">println</span><span class="o">(</span>elokuva<span class="o">.</span><span class="na">toString</span><span class="o">());</span> </td></tr><tr><th id="L472"><a href="#L472">472</a></th><td>            <span class="o">}</span> </td></tr><tr><th id="L473"><a href="#L473">473</a></th><td>            </td></tr><tr><th id="L474"><a href="#L474">474</a></th><td>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span> FileNotFoundException ex <span class="o">)</span> <span class="o">{</span> </td></tr><tr><th id="L475"><a href="#L475">475</a></th><td>            <span class="k">throw</span> <span class="k">new</span> <span class="nf">SailoException</span><span class="o">(</span><span class="s">"Tiedosto "</span> <span class="o">+</span> ftied<span class="o">.</span><span class="na">getName</span><span class="o">()</span> <span class="o">+</span> <span class="s">" ei aukea"</span><span class="o">);</span> </td></tr><tr><th id="L476"><a href="#L476">476</a></th><td>        <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span> IOException ex <span class="o">)</span> <span class="o">{</span> </td></tr><tr><th id="L477"><a href="#L477">477</a></th><td>            <span class="k">throw</span> <span class="k">new</span> <span class="nf">SailoException</span><span class="o">(</span><span class="s">"Tiedoston "</span> <span class="o">+</span> ftied<span class="o">.</span><span class="na">getName</span><span class="o">()</span> <span class="o">+</span> <span class="s">" kirjoittamisessa ongelmia"</span><span class="o">);</span> </td></tr><tr><th id="L478"><a href="#L478">478</a></th><td>        <span class="o">}</span> </td></tr><tr><th id="L479"><a href="#L479">479</a></th><td> </td></tr><tr><th id="L480"><a href="#L480">480</a></th><td>        muutettu <span class="o">=</span> <span class="kc">false</span><span class="o">;</span></td></tr><tr><th id="L481"><a href="#L481">481</a></th><td>    <span class="o">}</span></td></tr><tr><th id="L482"><a href="#L482">482</a></th><td><span class="o">}</span></td></tr></tbody></table>

      </div>
      <div id="help"><strong>Huomaa:</strong> Katso <a href="/projects/ohj2ht/wiki/TracBrowser">TracBrowser</a>
        löytääksesi ohjeita tiedostovaraston selaamiseksi.</div>
      <div id="anydiff">
        <form action="/projects/ohj2ht/diff" method="get">
          <div class="buttons">
            <input type="hidden" name="new_path" value="/k2018/kijohiet/tags/vaihe7/src/elokuvarekisteri/Elokuvat.java" />
            <input type="hidden" name="old_path" value="/k2018/kijohiet/tags/vaihe7/src/elokuvarekisteri/Elokuvat.java" />
            <input type="hidden" name="new_rev" value="50131" />
            <input type="hidden" name="old_rev" value="50131" />
            <input type="submit" value="Näytä muutokset..." title="Select paths and revs for Diff" />
          </div>
        </form>
      </div>
    </div>
    <div id="altlinks">
      <h3>Lataa muissa muodoissa:</h3>
      <ul>
        <li class="first">
          <a rel="nofollow" href="/projects/ohj2ht/browser/k2018/kijohiet/tags/vaihe7/src/elokuvarekisteri/Elokuvat.java?rev=50131&amp;format=txt">Pelkkä teksti</a>
        </li><li class="last">
          <a rel="nofollow" href="/projects/ohj2ht/export/50131/k2018/kijohiet/tags/vaihe7/src/elokuvarekisteri/Elokuvat.java">Alkuperäinen muoto</a>
        </li>
      </ul>
    </div>
    </div>
    <div id="footer" lang="en" xml:lang="en"><hr />
      <a id="tracpowered" href="http://trac.edgewall.org/"><img src="/projects/ohj2ht/chrome/common/trac_logo_mini.png" height="30" width="107" alt="Trac Powered" /></a>
      <p class="left">Ohjelmaversio: <a href="/projects/ohj2ht/about"><strong>Trac 0.12.5</strong></a><br />
Toimittaja: <a href="http://www.edgewall.org/">Edgewall Software</a>.</p>
      <p class="right">Trac-projektin sivut löydät osoitteesta <br /><a href="http://trac.edgewall.org/">http://trac.edgewall.org/</a></p>
    </div>
    <div id="sitefooter" class="alalinkkipalkki">
      <p>Ohjelmointi 2 - kevät 2019</p>
    </div>
  </body>
</html>